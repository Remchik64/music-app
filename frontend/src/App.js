import React, { useState, useEffect } from 'react';
import './App.css';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const Navigation = () => {
  return (
    <nav className="main-nav">
      <ul>
        <li><a href="#" className="nav-link active">–°—Ç—É–¥–∏—è</a></li>
        <li><a href="#" className="nav-link">–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞</a></li>
        <li><a href="#" className="nav-link">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</a></li>
      </ul>
    </nav>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —á–∞—Ç–∞ —Å –ò–ò
const AIChat = () => {
  const [messages, setMessages] = useState([
    { id: 1, text: '–ü—Ä–∏–≤–µ—Ç! –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å —Å –≤–∞—à–µ–π –º—É–∑—ã–∫–æ–π —Å–µ–≥–æ–¥–Ω—è?', sender: 'ai' }
  ]);

  return (
    <div className="chat-container">
      <div className="chat-header">
        <h2>AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç</h2>
      </div>
      <div className="chat-messages">
        {messages.map(msg => (
          <div key={msg.id} className={`message ${msg.sender}`}>
            {msg.text}
          </div>
        ))}
      </div>
      <div className="chat-input">
        <input type="text" placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." />
        <button className="send-button">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π —Å—Ç—É–¥–∏–∏
const MusicStudio = () => {
  return (
    <div className="studio-container">
      <div className="studio-header">
        <h2>–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –°—Ç—É–¥–∏—è</h2>
      </div>
      <div className="tracks-container">
        <div className="track">
          <div className="track-controls">
            <span className="track-name">–ú–µ–ª–æ–¥–∏—è</span>
            <button className="track-button">M</button>
            <button className="track-button">S</button>
          </div>
          <div className="track-content"></div>
        </div>
        <div className="track">
          <div className="track-controls">
            <span className="track-name">–†–∏—Ç–º</span>
            <button className="track-button">M</button>
            <button className="track-button">S</button>
          </div>
          <div className="track-content"></div>
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –ø–∞–Ω–µ–ª–∏
const TransportControls = () => {
  return (
    <div className="transport-controls">
      <button className="transport-button"><i className="icon-record"></i></button>
      <button className="transport-button"><i className="icon-play"></i></button>
      <button className="transport-button"><i className="icon-stop"></i></button>
      <button className="transport-button"><i className="icon-loop"></i></button>
      <div className="transport-time">00:00:00</div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —Ç–µ–º—ã
const ThemeToggle = () => {
  const [isDarkTheme, setIsDarkTheme] = useState(false);

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
  const toggleTheme = () => {
    const newTheme = !isDarkTheme;
    setIsDarkTheme(newTheme);
    document.documentElement.setAttribute('data-theme', newTheme ? 'dark' : 'light');
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
    localStorage.setItem('theme', newTheme ? 'dark' : 'light');
  };

  // –ü—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É
  useEffect(() => {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark') {
      setIsDarkTheme(true);
      document.documentElement.setAttribute('data-theme', 'dark');
    }
  }, []);

  return (
    <button 
      className="theme-toggle-button" 
      onClick={toggleTheme}
      title={isDarkTheme ? '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É' : '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ç–µ–º–Ω—É—é —Ç–µ–º—É'}
    >
      {isDarkTheme ? '‚òÄÔ∏è' : 'üåô'}
    </button>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function App() {
  const [isSidebarVisible, setIsSidebarVisible] = useState(true);

  const toggleSidebar = () => {
    setIsSidebarVisible(!isSidebarVisible);
  };

  return (
    <div className="app-container">
      <header className="app-header">
        <div className="logo">
          <h1>Music<span>AI</span></h1>
        </div>
        <Navigation />
        <div className="user-profile">
          <ThemeToggle />
          <button className="profile-button">–ü—Ä–æ—Ñ–∏–ª—å</button>
        </div>
      </header>
      
      <div className="main-content">
        <aside className={`chat-sidebar ${isSidebarVisible ? '' : 'sidebar-hidden'}`}>
          <AIChat />
        </aside>
        <div className="sidebar-toggle-button" onClick={toggleSidebar}>
          {isSidebarVisible ? '<' : '>'}
        </div>
        <main className="studio-main">
          <MusicStudio />
        </main>
      </div>
      
      <footer className="app-footer">
        <TransportControls />
      </footer>
    </div>
  );
}

export default App;
